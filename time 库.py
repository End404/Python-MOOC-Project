

#############################################################

# ------------ time库：是Python中处理时间的标准库。 ---------#
# -------------- 计算机时间的表达  import time --------------#
# --------------- 格式化输出功能  time.<b>() ----------------#
##                                                         ##
# ----- time库 三类函数 -------------------------------------#
#                                                           #
# ----- 时间获取：time() ; ctime() ; gmtime() ---------------#
# ----- 时间格式化：strftime() ; strptime() -----------------#
# ----- 程序计时：sleep() ；pert_counter() ------------------#

#############################################################


啊 = '=' * 100
print ( 啊 )

print ( )

import time
a = time.time( )     # 获取当前时间戳（计算机内部时间值）；浮点数。
# a1 = time() 错误用法。
print ( ' 当前时间戳：',a )
# print (a1) a1是错误用法。

print ( )

b = time.ctime( )    # 获取当前时间以易读的方式表示（返回的是字符串）。
print ( ' 当前时间：',b )

print ( )

c = time.gmtime( )   # 表示计算机可处理的时间格式。
print ( ' 计算机可处理的时间格式: ', c )

print ( )


#########################################################

# ---------- 时间格式化:将时间以合理的方式展式出现。 ------#
# ---------- 模版 --------------------------------------#
# ---------- strftime()方法 ----------------------------#

#########################################################


g = time.gmtime( )
g1=time.strftime( " %Y-%m-%d  %H:%M:%S " , g )
print ( ' 时间格式化：' , g1 )

print ( )

t = time.gmtime( )
t1 = time.strftime( " %Y-%m-%d  %H:%M:%S " , t )
print (' time.strftime：', t1 )

print ( )

t2 = ' 2020-06-10  08:57:59 '   # 举例。
t3=time.strptime( t2 , " %Y-%m-%d  %H:%M:%S " )
print ( ' 时间格式化（计算机内部时间值：）' , t3 )

print ( )

print ( 啊 )

print ()

###################################

# 程序计时：测量程序运行开始与结束的时间。
# 测量时间：perf_counter( )
# 产生时间：sleep( )

####################################

s = time.perf_counter()     # 返回一个CPU级别的精确时间计数值（秒数）。
print ( ' 精确时间计数值：', s )

s2 = time.perf_counter()    # 返回2个CPU级别的精确时间计数值（秒数）。
print ( ' 再次调用时间计数值：', s2 ) 
print( ' 差值：', s2-s )    # 调用差值。

print( ) 
print ('*************')
print ( ' 等一下...  ')
print()
print ( '    我要休息3秒。。。  ' )
print ()

def w():
    time.sleep( 3 )     # 休眠时间。

w()

print ( '  休眠3秒结束。 ' , w )
print ()
print (' 可以关闭了。。。')
print ()


