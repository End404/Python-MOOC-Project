
# ------- 函数的定义：函数是一段代码的表示 ----------#

# ====== 函数是一段具有特定功能的、可重用的语句组
# ====== 函数是一种功能的抽象，一般函数表达特定功能
# ====== 两个作用：降低编程难度和代码复用


#---------------------------------------------#
'''
def 函数名(参数：0个或多个):
    函数体
    return 返回值
'''
#----------------------------------------------#

# 阶乘：
def fact(n):
    s = 1
    for i in range(1,n+1):  # 1到n+1的循环。
        s *= i 
    return s


#——————————————————————————————————————————-————#
'''

函数定义时，所指定的参数是一种占位符
函数定义后，如果不经过调用，不会被执行
函数定义时，参数是输入、函数体是处理、结果是输出 (IPO)

'''
#————————————————————————————————————————————————#


#——————————————————————————————————————————————————#
'''

函数的调用:运行函数代码的方式
- 调用时要给出实际参数 
- 实际参数替换定义中的参数 
- 函数调用后得到返回值

'''
#——————————————————————————————————————————————————#


#*******************************************************************************#


a = fact(10)
print (a)

print()

a1 = fact(12)
print (a1)

print()


# 参数个数:函数可以有参数，也可以没有，但必须保留括号.

def fact1():
    print ("我也是函数")

吧=fact1()
print (吧)


#——————————————————————————————————————————————————#

'''
可选参数传递:函数定义时可以为某些参数指定默认值，构成可选参数.
def <函数名>(<非可选参数>, <可选参数>) :
    <函数体>
    return <返回值>
'''
#——————————————————————————————————————————————————#


# 计算 n!//m:
def fact2(n,m=1):   # m=1 是可选参数。
    s = 1
    for i in range(1,n+1):
        s *= i
    return s//m     # n(s)//m=1(可选参数)

b = fact2 (10)
print (b)
b1 = fact2(10,5)    # (n,m=1)
print (b1)

b3 = fact2(7,8)
print (b3)


#——————————————————————————————————————————————————#

'''

可变参数传递:函数定义时可以设计可变数量参数，既不确定参数总数量.
def <函数名>(<参数>, *b ) :
    <函数体>
    return <返回值>

'''
#——————————————————————————————————————————————————#


# 计算 n!(阶乘)乘数：
def fact3(n,*b):    # *b是可变参数.
    s = 1
    for i in range(1,n+1):
        s *= i
    for item in b:
        s *= item
    return s

c = fact3(10,3)
print (c)

c1 = fact3(10,3,5,8)    # 3,5,8:是*b(可变参数).
print (c1)

c2 = fact3(2,4,5,6,7,7,9)
print (c2)

#--------------------------------------------------------------------#

# 函数调用时，参数可以按照位置或名称方式传递。
# 函数可以返回0个或多个结果。
# return保留字：用来传递返回值；可以有return，也可以没有；传递0个返回值，也可以传递任意多个返回值。
def ta(n,m=1):
    s = 1
    for i in range(1,n+1):
        s *= i 
    return s//m , n,m   ## 返回多个结果（值）。

d = ta (10,5)   # (10,5)是位置传递。
print (d)

d1 = ta(m=5,n=10)   # (m=5,n=10)是名称传递。
print (d1)

